worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr warn;

    # Enable Docker's internal DNS resolution
    resolver 127.0.0.11 valid=10s;

    upstream urls_service {
        zone upstream_zone 64k;
        server urls-service:80 resolve; # Main service
    }

    upstream analytics_producer {
        zone upstream_analytics 64k;
        server analytics-producer:80 resolve; # Analytics service
    }

    server {
        listen 8000;
        server_name _;

        location ~ ^/([^/]+)$ {  # Matches /{param}, but NOT /
            mirror /mirror_analytics$uri;  # Mirror the request to analytics-producer with the same path
            proxy_pass http://urls_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://urls_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/mirror_analytics(/.*)?$ {
            internal;  # Prevent external access
            proxy_pass http://analytics_producer$1;  # Forward to analytics-producer with the same path
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
