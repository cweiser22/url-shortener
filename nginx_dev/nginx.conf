worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr warn;

    # Enable Docker's internal DNS resolution (needed for dynamic service discovery)
    resolver 127.0.0.11 valid=10s;

    upstream urls_service {
        zone upstream_zone 64k;
        server urls-service:80 resolve; # Docker should handle DNS resolution across our replicas
    }

    server {
        listen 8000; # in dev, we listen on 8000 for convenience
        server_name _;

        location / {
            proxy_pass http://urls-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Caching setup, can be uncommented out if needed
            # proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;
            # proxy_cache my_cache;
            # proxy_cache_valid 200 302 10m;
            # proxy_cache_valid 404 1m;
        }


    }
}
